services:
  nginx:
    restart: unless-stopped 
    image: nginx:alpine
    volumes:
      - ./etc/nginx:/etc/nginx
      - ./assets:/usr/share/nginx/html
    ports:
      - "8081:80"
  api:
    restart: always
    build: ./api
    env_file:
      - environment
    volumes:
      - ./api:/usr/src/app
      - ./assets:/usr/src/app/assets
        #  wsclient:
        #    build: ./socketio-client
        #    volumes:
        #      - ./socketio-client:/usr/src/app
        #  mongo:
        #    build: ./mongo
        #    volumes:
        #      - ./mongo/data:/data/db
        #    entrypoint: ["/usr/bin/mongod", "--dbpath", "/data/db", "--bind_ip", "localhost,bkkleague-mongo-1", "--bind_ip_all", "--replSet", "rs0", "--auth", "--keyFile", "/usr/src/app/mongo.keyfile"]
        #    entrypoint: ["/usr/bin/mongod", "--dbpath", "/data/db", "--bind_ip", "localhost,bkkleague-mongo-1", "--bind_ip_all", "--replSet", "rs0", "--keyFile", "/usr/src/app/mongo.keyfile"]
  redis:
    restart: always
    image: redis
    volumes:
      - ./redis:/data
  mysql:
    restart: always
    image: bkkleague_db:latest
    env_file:
      - environment
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./dumps:/opt
  phpmyadmin:
    restart: always
    image: phpmyadmin
    env_file:
      - environment
        #www:
        #build:
        #context: /home/ken/dev/bkkleague/bkkleague-web
        #dockerfile: /home/ken/dev/bkkleague/bkkleague-web/Dockerfile
        #ports:
        #- "5000:5000"
